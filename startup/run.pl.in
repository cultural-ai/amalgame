#!@SWIPL@ -g cp_server([after_load(amalgame:ag_load_schemas)]) -s

/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
This file provides a skeleton startup file.  It can be localized by running

    % ./configure			(Unix)
    % Double-clicking setup.pl		(Windows)

After that, the created run.pl can be   edited to suit your installation
requirements.  See comments in the file.
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */

% Setup search paths. Adding cliopatria allows   using  this script from
% any directory and adding  ontology  makes   RDF  files  visible in the
% interface.
%
% Adding path(s) for ontology makes  the   system  look for Manifest.ttl
% files in the target directory and any subdirectory thereof.
%

file_search_path(amalgame, '@PARENTDIR@').
file_search_path(cliopatria,   amalgame('ClioPatria')).

% Make loading files silent. Comment if you  want to see all files being
% loaded.

:- set_prolog_flag(verbose, silent).

		 /*******************************
		 *	      LOAD CODE		*
		 *******************************/

% Use the ClioPatria help system.  If used, it must be loaded first!

:- use_module(cliopatria('applications/help/load')).

% Load ClioPatria itself.  Better keep this line.

:- use_module(cliopatria(cliopatria)).				% (*)
:- use_module(amalgame(amalgame)).

% Load the remainder of the configuration. The directory conf.d can also
% be used to load additional (plugin) functionality. It is *not* adviced
% to put the actual code there,  but   merely  small files that load and
% configure the code.

:- use_module(library(conf_d)).

:- load_conf_d(cliopatria('conf.d'), []).
:- load_conf_d('conf.d', []).

% Get back normal verbosity of the toplevel.

:- set_prolog_flag(verbose, normal).


